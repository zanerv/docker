---
version: '3.4'
volumes:
  nextcloud:

networks:
  proxy-tier:

services:
  bitwarden:
    image: bitwardenrs/server-mysql
    container_name: bitwarden
    hostname: bitwarden
    environment:
      - LETSENCRYPT_HOST=x.${DOMAIN}
      - VIRTUAL_HOST=x.${DOMAIN}
      - VIRTUAL_PORT=80
      - ENABLE_DB_WAL='false'
      - DATABASE_URL=mysql://bitwarden_rs:${MYSQL_PASSWORD}@mariadb/bitwarden_rs
      - RUST_BACKTRACE=1
      - WEBSOCKET_ENABLED='true'
    volumes:
      - ${OPT}/bitwarden:/data/:rw
    ports:
      - 80
      - 3012
    restart: unless-stopped
    networks:
      - default
      - proxy-tier

  ombi:
    image: linuxserver/ombi:latest
    container_name: ombi
    hostname: ombi
    environment:
      - LETSENCRYPT_HOST=ombi.${DOMAIN}
      - VIRTUAL_HOST=ombi.${DOMAIN}
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/London
    volumes:
      - ${OPT}/ombi:/config
    ports:
      - 3579:3579
    restart: unless-stopped
    networks:
      - default
      - proxy-tier

  # duplicati:
  #   image: linuxserver/duplicati
  #   container_name: duplicati
  #   environment:
  #     - VIRTUAL_HOST=duplicati.${DOMAIN}
  #     - VIRTUAL_PORT=8200
  #     - PGID=${PGID}
  #     - PUID=${PUID}
  #     - TZ=Europe/London
  #     - CLI_ARGS= #optional
  #   volumes:
  #     - ${OPT}/duplicati:/config
  #     - /mnt/S8SA/backups:/backups
  #     - ${OPT}:/source
  #   ports:
  #     - 8200:8200
  #   restart: unless-stopped
  #   networks:
  #     - proxy-tier
  #     - default

  # splunk:
  #   image: splunk/splunk:latest
  #   container_name: splunk
  #   hostname: splunk
  #   environment:
  #     VIRTUAL_HOST: splunk.${DOMAIN}
  #     VIRTUAL_PORT: 8000
  #     SPLUNK_START_ARGS: --accept-license --answer-yes
  #     SPLUNK_PASSWORD: ${SPLUNK_PASSWORD}
  #     SPLUNK_ENABLE_LISTEN: 9997
  #     SPLUNK_ADD: udp 515
  #     SPLUNK_USER: root
  #   volumes:
  #    - ${OPT}/splunk/etc:/opt/splunk/etc
  #    - ${OPT}/splunk/var:/opt/splunk/var
  #   ports:
  #    - "22222:22222"
  #    - "8000:8000"
  #    - "9997:9997"
  #    - "8088:8088"
  #    - "514:514/udp"
  #   restart: unless-stopped
  #   networks:
  #     - proxy-tier
  #     - default

  telegraf:
    image: telegraf
    container_name: telegraf
    hostname: telegraf
    #privileged: true
    links:
      - mariadb
      - influxdb
    volumes:
      - "${OPT}/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf"
    environment:
      - HOST_NAME=telegraf
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_PORT=8086
    dns: ${DNS}
  
  dockermon:
    image: philhawthorne/ha-dockermon
    container_name: dockermon
    hostname: dockermon
    #restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8126:8126
      
#  hassio_supervisor:
#    image: homeassistant/amd64-hassio-supervisor
#    container_name: hassio_supervisor
#    hostname: hassio_supervisor
#    restart: unless-stopped
#    privileged: true
#    security_opt:
#      - seccomp:unconfined
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /var/run/dbus:/var/run/dbus
#      - /dev/rtc:/dev/rtc:ro
#      - /usr/share/hassio:/data
#      - ${OPT}/hass:/data/homeassistant:ro
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
#      - SUPERVISOR_SHARE=/usr/share/hassio
#      - SUPERVISOR_NAME=hassio_supervisor
#      - HOMEASSISTANT_REPOSITORY=homeassistant/qemux86-64-homeassistant

  unifi:
    image: linuxserver/unifi
    container_name: unifi
    hostname: unifi
    restart: unless-stopped
    ports:
     - '3478:3478/udp'
     - '27117:27117'
     - '10001:10001/udp'
     - '6789:6789/tcp'
     - '8080:8080/tcp'
     - '8880:8880/tcp'
     - '8443:8443/tcp'
     - '8843:8843/tcp'
    volumes:
     - ${OPT}/unifi:/config
     - /etc/localtime:/etc/localtime:ro
     - /dev/rtc:/dev/rtc:ro
    environment:
     - VIRTUAL_HOST=unifi.${DOMAIN}
     - VIRTUAL_PORT=8080
     - PGID=${PGID}
     - PUID=${PUID}
    networks:
      - proxy-tier
      - default
  
  # jupyterlab:
  #   image: mikebirdgeneau/jupyterlab
  #   container_name: jupyterlab
  #   hostname: jupyterlab
  #   restart: unless-stopped
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - ${OPT}/jupyterlab:/opt/app/data
  #   entrypoint: sh -c 'jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --notebook-dir=/opt/app/data --allow-root'

  tautulli:
    image: tautulli/tautulli
    container_name: tautulli
    hostname: tautulli
    environment:
      - VIRTUAL_HOST=tautulli.${DOMAIN}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${OPT}/tautulli/logs:/logs
      - ${OPT}/tautulli/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
    dns: ${DNS}
    networks:
      - proxy-tier

  smokeping:
    image: linuxserver/smokeping
    container_name: smokeping
    hostname: smokeping
    environment:
      - VIRTUAL_HOST=smokeping.${DOMAIN}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${OPT}/smokeping/data:/data
      - ${OPT}/smokeping/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
    dns: ${DNS}
    networks:
      - proxy-tier

  influxdb:
    image: influxdb
    container_name: influxdb
    hostname: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
      - "25826:25826/udp"
    volumes:
      - ${OPT}/influxdb:/var/lib/influxdb
      - ${OPT}/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - ${OPT}/collectd/types.db:/usr/share/collectd/types.db:ro
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
    dns: ${DNS}
      
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    user: "1001"
    restart: unless-stopped
    depends_on:
      - influxdb
    environment:
      - VIRTUAL_HOST=grafana.${DOMAIN}
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${DOMAIN}:25
      - GF_SMTP_FROM_ADDRESS=${EMAIL}
      - GF_SMTP_USER=${EMAIL}
      - GF_SMTP_PASSWORD=${EMAIL_PASS}
      - GF_SMTP_SKIP_VERIFY=true
    volumes:
      - ${OPT}/grafana/plugins:/var/lib/grafana/plugins
      - ${OPT}/grafana:/var/lib/grafana
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
    dns: ${DNS}
    networks:
      - proxy-tier
      - default
  
  plex:
    image: plexinc/pms-docker
    container_name: plex
    hostname: plex
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - ${OPT}/plex/40-plex-first-run:/etc/cont-init.d/40-plex-first-run
      - ${OPT}/plex:/config
      - /media/Movies:/media/Movies
      - /media/Music:/media/Music
      - /media/TV:/media/TV
#    network_mode: host
    ports:
      - 32400:32400/tcp 
      - 33400:33400/tcp
#Plex Companion
      - 3005:3005/tcp
#roku
      - 8324:8324/tcp
#DLNA Server
      - 32469:32469/tcp
      - 1900:1900/udp
#GDM network discovery
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=plex.${DOMAIN}
      - VIRTUAL_PORT=32400
      - LETSENCRYPT_HOST=plex.${DOMAIN}
      - ADVERTISE_IP=https://plex.${DOMAIN}/
      - PLEX_CLAIM=${PLEX_CLAIM}
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
    dns: ${DNS}
    networks:
      - proxy-tier

  transmission:
    image: linuxserver/transmission
    container_name: transmission
    hostname: transmission
    ports:
      - 9091
      - 51413:51413
    restart: unless-stopped
    volumes:
      - ${OPT}/transmission:/config
      - /etc/localtime:/etc/localtime:ro
      - /media/tmp:/media/tmp
      - /media/Movies:/media/Movies
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VIRTUAL_HOST=transmission.${DOMAIN}
      - VIRTUAL_PORT=9091
    #  - TRANSMISSION_WEB_HOME=/combustion-release/
    dns: ${DNS}
    networks:
      - proxy-tier

  couchpotato:
    image: linuxserver/couchpotato
    container_name: couchpotato
    hostname: couchpotato
    depends_on:
      - transmission
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - ${OPT}/couchpotato:/config
      - /media/Movies:/media/Movies 
    links:
      - transmission:transmission
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VIRTUAL_HOST=couchpotato.${DOMAIN}
    dns: ${DNS}
    networks:
      - proxy-tier

  sickrage:
    image: linuxserver/sickrage
    container_name: sickrage
    hostname: sickrage
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VIRTUAL_HOST=sickrage.${DOMAIN}
    restart: unless-stopped
    links:
      - transmission:transmission
    depends_on:
      - transmission
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${OPT}/sickrage:/config
      - /media/tmp:/media/tmp
      - /media/TV:/media/TV
    dns: ${DNS}
    networks:
      - proxy-tier

  openvpn:
    cap_add:
     - NET_ADMIN
    image: kylemanna/openvpn
    container_name: openvpn
    hostname: openvpn
    ports:
     - "1194:1194/udp"
    expose:
     - 5555
    restart: unless-stopped
    volumes:
      - ${OPT}/openvpn:/etc/openvpn
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
    dns: ${DNS}

  openvpn_monitor:
    image: ruimarinho/openvpn-monitor
    container_name: openvpn-monitor
    hostname: openvpn-monitor
    ports:
      - 888:80
    environment:
      # General
      OPENVPNMONITOR_DEFAULT_DATETIMEFORMAT: "%d/%m/%Y %H:%M:%S"
#      OPENVPNMONITOR_DEFAULT_LOGO: "https://openvpn.net/wp-content/uploads/2018/06/about_text_logo.png"
      OPENVPNMONITOR_DEFAULT_MAPS: "True"
      OPENVPNMONITOR_DEFAULT_LATITUDE: "0.0"
      OPENVPNMONITOR_DEFAULT_LONGITUDE: "0.0"
      OPENVPNMONITOR_DEFAULT_SITE: Live
      # Site 1 - CZ
      OPENVPNMONITOR_SITES_0_ALIAS: CZ
      OPENVPNMONITOR_SITES_0_HOST: openvpn
      OPENVPNMONITOR_SITES_0_NAME: Shiny
      OPENVPNMONITOR_SITES_0_PORT: 5555
      # Site 2 - RO
      OPENVPNMONITOR_SITES_1_ALIAS: RO
      OPENVPNMONITOR_SITES_1_HOST: mk.kpu.ro
      OPENVPNMONITOR_SITES_1_NAME: Mk
      OPENVPNMONITOR_SITES_1_PORT: 5555
      # Site 3 - RO
      OPENVPNMONITOR_SITES_2_ALIAS: intra
      OPENVPNMONITOR_SITES_2_HOST: mk.kpu.ro
      OPENVPNMONITOR_SITES_2_NAME: Mk_intranet
      OPENVPNMONITOR_SITES_2_PORT: 5556

  proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: proxy
    hostname: proxy
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - ${OPT}/hass/ssl:/ssl:ro
      - ${OPT}/proxy/certs:/etc/nginx/certs:ro
      - ${OPT}/proxy/conf.d:/etc/nginx/conf.d
      - ${OPT}/proxy/vhost.d:/etc/nginx/vhost.d
      - ${OPT}/proxy/html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      proxy-tier:
        ipv4_address: 172.19.0.4

###Nextcloud###
  mariadb:
    image: mariadb
    container_name: mariadb
    hostname: mariadb
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - ${OPT}/mariadb/ncp-mysql.cnf:/etc/mysql/conf.d/ncp-mysql.cnf:ro
      - ${OPT}/mariadb:/var/lib/mysql
      # - /root/nextcloud.db:/docker-entrypoint-initdb.d/nextcloud.sql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    dns: ${DNS}
    ports:
     - "3306:3306/tcp"

  redis:
    image: redis
    container_name: redis
    hostname: redis
    dns: ${DNS}
    restart: unless-stopped
# && php /var/www/html/occ preview:pre-generate

  cron:
    image: nextcloud:fpm
    container_name: cron
    hostname: cron
    restart: unless-stopped
    volumes:
      - nextcloud:/var/www/html
      - ${OPT}/nextcloud/config:/var/www/html/config/
      - ${OPT}/nextcloud/custom_apps:/var/www/html/custom_apps
      - ${OPT}/nextcloud/data/data:/var/www/html/data
      - ${OPT}/nextcloud/memory-limit.ini:/usr/local/etc/php/conf.d/memory-limit.ini
      - ${OPT}/nextcloud/mysql.ini:/usr/local/etc/php/conf.d/mysql.ini
    user: www-data
    entrypoint: |
      bash -c 'bash -s <<EOF
        trap "break;exit" SIGHUP SIGINT SIGTERM
        while [ ! -f /var/www/html/config/config.php ]; do
          sleep 1
        done
        while true; do
          php -f /var/www/html/cron.php && php /var/www/html/occ preview:pre-generate
          sleep 5m
        done
      EOF'
    dns: ${DNS}
    depends_on:
      - mariadb
      - redis

  nextcloud:  
    image: nextcloud:fpm
    container_name: nextcloud
    hostname: nextcloud
    restart: unless-stopped
    volumes:
      - nextcloud:/var/www/html
      - ${OPT}/nextcloud/config:/var/www/html/config/
      - ${OPT}/nextcloud/custom_apps:/var/www/html/custom_apps
      - ${OPT}/nextcloud/memory-limit.ini:/usr/local/etc/php/conf.d/memory-limit.ini
      - ${OPT}/nextcloud/mysql.ini:/usr/local/etc/php/conf.d/mysql.ini
      - ${OPT}/nextcloud/data/data:/var/www/html/data
    environment:
      - MYSQL_HOST=mariadb
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - NEXTCLOUD_TABLE_PREFIX=oc_
    dns: ${DNS}
    depends_on:
      - mariadb
      - redis

  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    volumes:
      - ${OPT}/nginx/nextcloud.conf:/etc/nginx/nginx.conf
      - ${OPT}/nextcloud/custom_apps:/var/www/html/custom_apps
      - nextcloud:/var/www/html:ro
    environment:
      - VIRTUAL_HOST=z.${DOMAIN}
      - LETSENCRYPT_HOST=z.${DOMAIN}
      # - LETSENCRYPT_EMAIL=${EMAIL}
    depends_on:
      - proxy
      - nextcloud
    dns: ${DNS}
    networks:
      - proxy-tier
      - default

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    hostname: letsencrypt
    restart: unless-stopped
    volumes:
      - ${OPT}/proxy/certs:/etc/nginx/certs
      - ${OPT}/proxy/conf.d:/etc/nginx/conf.d
      - ${OPT}/proxy/vhost.d:/etc/nginx/vhost.d
      - ${OPT}/proxy/html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - proxy
    networks:
      - proxy-tier
      
  mqtt:
    image: eclipse-mosquitto
    container_name: mqtt
    hostname: mqtt
    restart: unless-stopped
    user: 1883:1883
    volumes:
      - ${OPT}/mqtt/data:/var/lib/mosquitto
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - ${OPT}/mqtt/:/mosquitto/config/
    ports:
      - 1883:1883
      - 9001:9001
    dns: ${DNS}
 
  # hassio:
  #   container_name: hassio
  #   image: "homeassistant/amd64-hassio-supervisor"
  #   restart: unless-stopped
  #   privileged: true
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /var/run/dbus:/var/run/dbus
  #     - ${OPT}/hassio:/data
  #   environment:
  #     - SUPERVISOR_SHARE=${OPT}/hassio
  #     - SUPERVISOR_NAME=hassio
  #     - HOMEASSISTANT_REPOSITORY=homeassistant/qemux86-64-homeassistant
  #     - HOSTNAME=hassio
  #   security_opt:
  #     - seccomp:unconfined
  #     - apparmor:unconfined

  hass:
    image: homeassistant/home-assistant:latest
    container_name: hass
    hostname: hass
#    pid: "host"
    volumes:
      - /root/.android:/root/.android:ro
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - ${OPT}/hass:/config
      - /var/run/docker.sock:/var/run/docker.sock
    devices:
      - /dev/bus/usb/002:/dev/bus/usb/002
    ports:
      - 8123:8123/tcp
    restart: unless-stopped
    network_mode: host
    dns: ${DNS}
    depends_on:
      - mqtt
      - mariadb
      - z2m
    environment:
      - PATH=$PATH:/config:/config/adb
      - LD_LIBRARY_PATH=/config/adb
      - IP=${IP}
      - HASS_TOKEN=$HASS_TOKEN

  z2m: 
    image: koenkk/zigbee2mqtt
    container_name: z2m
    hostname: z2m
    restart: unless-stopped
    depends_on:
      - mqtt
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${OPT}/z2m:/app/data
    devices:
      - "/dev/ttyACM0"
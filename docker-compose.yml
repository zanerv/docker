---
version: '2'
services:
  storj0:
    image: madcatsu/storjshare-multi-daemon
    container_name: storj0
    hostname: storj0
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - /media/Cloud/storj:/data
      - /opt/appdata/storj/configs:/config
      - /opt/appdata/storj/log:/logs
    command: --create-user abc:1001:1001
    environment:
      - ENABLE_DASHBOARD="true"
      - DASHBOARD_USER_EMAIL="mihai.tutuleasa@protonmail.com"
      - DASHBOARD_USER_SECRET="w39SEJGat9pq"
    ports:
      - 4000:4000
      - 4001:4001
      - 4002:4002
      - 4003:4003
      - 4004:4004

  storj1:
    image: madcatsu/storjshare-multi-daemon
    container_name: storj1
    hostname: storj1
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - /mnt/storj1:/data
      - /opt/appdata/storj1/configs:/config
      - /opt/appdata/storj/log:/logs
    command: --create-user abc:1001:1001
    environment:
      - ENABLE_DASHBOARD="true"
      - DASHBOARD_USER_EMAIL="mihai.tutuleasa@protonmail.com"
      - DASHBOARD_USER_SECRET="w39SEJGat9pq"
    ports:
      - 4010:4010
      - 4011:4011
      - 4012:4012
      - 4013:4013
      - 4014:4014

  plex:
    image: plexinc/pms-docker
    container_name: plex
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - /opt/appdata/plex:/config
      - /media/Movies:/media/Movies
      - /media/Music:/media/Music
      - /media/TV:/media/TV
#    network_mode: host
    ports:
      - 32400:32400/tcp 
      - 33400:33400/tcp
#Plex Companion
      - 3005:3005/tcp
#roku
      - 8324:8324/tcp
#DLNA Server
      - 32469:32469/tcp
      - 1900:1900/udp
#GDM network discovery
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    restart: always
    environment:
      - ADVERTISE_IP=http://${IP}:32400/
      - PLEX_CLAIM="nope"
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
    networks:
      - proxy-tier
      - default

#  plexpy:
#    image: linuxserver/plexpy
#    container_name: plexpy
#    depends_on:
#      - plex
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /dev/rtc:/dev/rtc:ro
#      - /opt/appdata/plexpy:/config
#      - /opt/appdata/plex/Library/Application Support/Plex Media Server/Logs:/logs:ro
#    ports:
#      - 8181:8181
#    restart: always
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - VIRTUAL_HOST=plexpy.${DOMAIN}
#      - VIRTUAL_PORT=8181
#    networks:
#      - proxy-tier
#      - default

  transmission:
    image: linuxserver/transmission
    container_name: transmission
    ports:
      - 9091:9091
      - 51413:51413
    restart: always
    volumes:
      - /opt/appdata/transmission:/config
      - /etc/localtime:/etc/localtime:ro
      - /media/tmp:/media/tmp
      - /media/Movies:/media/Movies
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VIRTUAL_HOST=transmission.${DOMAIN}
      - VIRTUAL_PORT=9091
    networks:
      - proxy-tier
      - default

  couchpotato:
    image: linuxserver/couchpotato
    container_name: couchpotato
    depends_on:
      - transmission
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - /opt/appdata/couchpotato:/config
      - /media/Movies:/media/Movies 
    ports:
      - 5050:5050
    links:
      - transmission:transmission
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VIRTUAL_HOST=couchpotato.${DOMAIN}
      - VIRTUAL_PORT=5050
    networks:
      - proxy-tier
      - default

  sickrage:
    image: linuxserver/sickrage
    container_name: sickrage
    ports:
    - 8081:8081
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VIRTUAL_HOST=sickrage.${DOMAIN}
      - VIRTUAL_PORT=8081
    restart: always
    links:
      - transmission:transmission
    depends_on:
      - transmission
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/appdata/sickrage:/config
      - /media/tmp:/media/tmp
      - /media/TV:/media/TV
    networks:
      - proxy-tier
      - default

  portainer:
    image: portainer/portainer
    container_name: portainer
    ports:
      - 9090:9000
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VIRTUAL_HOST=portainer.${DOMAIN}
      - VIRTUAL_PORT=9000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - /opt/appdata/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart:
      always
    networks:
      - proxy-tier
      - default
#
#  watchtower:
#    image: centurylink/watchtower
#v2tec/watchtower
#    container_name: watchtower
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /etc/localtime:/etc/localtime:ro
#      - /dev/rtc:/dev/rtc:ro
#      - /opt/appdata/watchtower/config.json:/config.json
#    command: --debug --interval 3600

  openvpn:
    cap_add:
     - NET_ADMIN
    image: kylemanna/openvpn
    container_name: openvpn
    ports:
     - "1194:1194/udp"
    restart: always
    volumes:
      - /opt/appdata/openvpn:/etc/openvpn
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro

#  organizr:
#    image: lsiocommunity/organizr
#    container_name: organizr
#    ports:
#      - 8080:80
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - VIRTUAL_HOST=meh.${DOMAIN}
#      - VIRTUAL_PORT=80
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /dev/rtc:/dev/rtc:ro
#      - /opt/appdata/organizr:/config
#    restart:
#      always
#    networks:
#      - proxy-tier
#      - default

###Pi Hole###
  pihole:
    image: diginc/pi-hole
    container_name: pihole
    hostname: pihole
    ports:
     - "${IP}:53:53/tcp"
     - "${IP}:53:53/udp"
     - 8053:80
    volumes:
      - /var/log/pihole.log:/var/log/pihole.log
      - /opt/appdata/pihole:/etc/pihole
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
  #net: host
    cap_add:
     - NET_ADMIN
    environment:
      - ServerIP=${IP}
      - PROXY_LOCATION=pihole
      - VIRTUAL_HOST=pihole.${DOMAIN}
      - VIRTUAL_PORT=80
      - WEBPASSWORD=${WEBPASSWORD}
    extra_hosts:
    # Resolve to nothing domains (terminate connection)
      - 'nw2master.bioware.com nwn2.master.gamespy.com:0.0.0.0'
    # LAN hostnames for other docker containers using jwilder
      - 'sickrage sickrage.${DOMAIN}:${IP}'
      - 'couchpotato couchpotato.${DOMAIN}:${IP}'
      - 'transmission transmission.${DOMAIN}:${IP}'
      #- 'plexpy plexpy.${DOMAIN}:${IP}'
      - 'plex plex.${DOMAIN}:${IP}'
      - 'z z.${DOMAIN}:${IP}'
      - 'portainer portainer.${DOMAIN}:${IP}'
      - 'pihole pihole.${DOMAIN}:${IP}'
     # - 'organizr meh.${DOMAIN}:${IP}'
      - 'hass hass.${DOMAIN}:${IP}'
      - 'obama obama.${DOMAIN}:192.168.3.1'
      # - 'wordpress wordpress.yourDomain.lan:192.168.41.55'
    restart: always
    networks:
      - proxy-tier
      - default

###Nextcloud###
  db:
    image: mariadb
    container_name: mariadb
    restart: always
    volumes:
      - /opt/appdata/db:/var/lib/mysql
      # - /root/nextcloud.db:/docker-entrypoint-initdb.d/nextcloud.sql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  redis:
    image: redis
    container_name: redis
    restart: always

  cron:
    container_name: cron
    image: nextcloud:fpm
    restart: always
    volumes_from:
      - nextcloud
    user: www-data
    entrypoint: |
      bash -c 'bash -s <<EOF
        trap "break;exit" SIGHUP SIGINT SIGTERM
        while [ ! -f /var/www/html/config/config.php ]; do
          sleep 1
        done
        while true; do
          php -f /var/www/html/cron.php
          sleep 15m
        done
      EOF'
    depends_on:
      - db
      - redis

  nextcloud:  
    image: nextcloud:fpm
    container_name: nextcloud
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - /opt/appdata/nextcloud/config:/var/www/html/config/
      - /opt/appdata/nextcloud/custom_apps:/var/www/html/custom_apps
      - /opt/appdata/nextcloud/data:/var/www/html/data
    environment:
      - MYSQL_HOST=db
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - NEXTCLOUD_TABLE_PREFIX=oc_
    depends_on:
      - db
      - redis

  nginx:
    image: nginx
    restart: always
    container_name: nginx
    volumes:
      - /opt/appdata/nginx/nextcloud.conf:/etc/nginx/nginx.conf
      - /opt/appdata/nextcloud/custom_apps:/var/www/html/custom_apps
      - nextcloud:/var/www/html:ro
    environment:
      - VIRTUAL_HOST=z.${DOMAIN}
      - LETSENCRYPT_HOST=z.${DOMAIN}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - nextcloud
    networks:
      - proxy-tier
      - default

  proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - /opt/appdata/proxy/certs:/etc/nginx/certs:ro
      - /opt/appdata/proxy/conf.d:/etc/nginx/conf.d
      - /opt/appdata/proxy/vhost.d:/etc/nginx/vhost.d
      - /opt/appdata/proxy/html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      - DEFAULT_HOST=pihole.${DOMAIN}
    networks:
      - proxy-tier

  letsencrypt-companion:
    container_name: letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - /opt/appdata/proxy/certs:/etc/nginx/certs
      - /opt/appdata/proxy/conf.d:/etc/nginx/conf.d
      - /opt/appdata/proxy/vhost.d:/etc/nginx/vhost.d
      - /opt/appdata/proxy/html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy-tier
    depends_on:
      - proxy
      
#Home assistant
  mqtt:
    image: eclipse-mosquitto
    container_name: mqtt
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - /opt/appdata/mqtt/:/mosquitto/config/
    ports:
      - 1883:1883
      - 9001:9001
    restart: always

  hass:
    image: homeassistant/home-assistant
    container_name: hass
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - /opt/appdata/hass:/config
    ports:
      - 8123:8123/tcp
    restart: always
#    environment:
#      - VIRTUAL_HOST=hass.${DOMAIN}
#      - VIRTUAL_PORT=8123
    network_mode: host
#    networks:
#      - proxy-tier
#      - default

volumes:
  nextcloud:
networks:
  proxy-tier:
